<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC
        "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
        "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">

<hibernate-mapping package="limma.plugins.video" default-lazy="false">

    <class name="Video" table="video">

        <id name="id" access="field">
            <generator class="native"/>
        </id>

        <property name="title" access="field"/>

        <set name="files" inverse="true" access="field">
            <key column="video_id"/>
            <one-to-many class="VideoFile"/>
        </set>

        <property name="director" access="field"/>
        <property name="runtime" access="field"/>
        <property name="year" access="field"/>
        <property name="plot" access="field"/>
        <property name="rating" access="field"/>
        <property name="imdbNumber" access="field"/>

        <set access="field" name="categories" table="video_categories">
            <key column="video_id"/>
            <many-to-many class="VideoCategory" column="category_id"/>
        </set>

    </class>

    <class name="VideoFile" table="video_file">
        <id name="id" access="field">
            <generator class="native"/>
        </id>

        <natural-id mutable="false">
            <property name="path" access="field"/>
        </natural-id>

        <many-to-one name="video" access="field" cascade="all-delete-orphan" column="video_id"/>

    </class>

    <class name="VideoCategory" table="video_category">
        <id name="id" access="field">
            <generator class="native"/>
        </id>

        <property name="name" access="field"/>

        <set access="field" name="videos" table="video_categories" inverse="true">
            <key column="category_id"/>
            <many-to-many class="Video" column="video_id" />
        </set>
    </class>

    <query name="all_videos">from Video</query>
    <query name="all_video_files">from VideoFile</query>
    <query name="videofile_by_path">from VideoFile where path = :path</query>
</hibernate-mapping>

